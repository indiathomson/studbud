var yourDateToGo = new Date(); //here you're making new Date object
    yourDateToGo.setDate(yourDateToGo.getDate() + 1); //your're setting date in this object 1 day more from now
    //you can change number of days to go by putting any number in place of 1

    var timing = setInterval( // you're making an interval - a thing, that is updating content after number of miliseconds, that you're writing after comma as second parameter
      function () {

        var currentDate = new Date().getTime(); //same thing as above
        var timeLeft = yourDateToGo - currentDate; //difference between time you set and now in miliseconds

        var days = Math.floor(timeLeft / (1000 * 60 * 60 * 24)); //conversion miliseconds on days 
        if (days < 10) days="0"+days; //if number of days is below 10, programm is writing "0" before 9, that's why you see "09" instead of "9"
        var hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)); //conversion miliseconds on hours
        if (hours < 10) hours="0"+hours;
        var minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60)); //conversion miliseconds on minutes 
        if (minutes < 10) minutes="0"+minutes;
        var seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);//conversion miliseconds on seconds
        if (seconds < 10) seconds="0"+seconds;

        document.getElementById("countdown").innerHTML = days + "d " + hours + "h " + minutes + "m " + seconds + "s"; // putting number of days, hours, minutes and seconds in div, 
        //which id is countdown

        if (timeLeft <= 0) {
          clearInterval(timing);
          document.getElementById("countdown").innerHTML = "It's over"; //if there's no time left, programm in this 2 lines is clearing interval (nothing is counting now) 
          //and you see "It's over" instead of time left
        }
      }, 1000);

      function firstExample () {

        for(;;) {
        var x = prompt("Enter number of days");
        x = parseInt(x);
        if (x>0 && x<30) break;
        else alert("Enter number between 0 and 30")

        }
       

 //TASKLIST
 
const form = document.getElementById("taskform");
const button = document.getElementById("taskform > button");
var taskList = document.getElementById("taskList");
var taskInput = document.getElementById("taskInput");
var dueDateInput = document.getElementById("dueDateInput");
var taskDeadlineInput = document.getElementById("taskDeadlineInput");
var estimatedCompletionTimeInput = document.getElementById("estimatedCompletionTimeInput");
var priorityRatingInput = document.getElementById("priorityRatingInput");



button.addEventListener("click", function(event){
  event.preventDefault();
  let task = taskInput.value;
  let dueDate = dueDateInput.value;
  let taskDeadline = taskDeadlineInput.value; 
  let estimatedCompletionTime = estimatedCompletionTimeInput.value;
  let priorityRatingInput = priorityRatingInput.options[priorityRatingInput.selectedIndex].value;


  addTask(task, dueDate, priorityRating, taskDeadline, estimatedCompletionTime, priorityRatingInput, false)
  console.log(taskList);
});


button.addEventListener("click", function(event){
});

var taskListArray =[];

function addTask(taskDescription, dueDate, priorityRating, taskDeadline, estimatedCompletionTime, completionStatus){
  let d = new Date();
  let dateCreated = d.getFullYear();
  let task = {
    taskDescription,
    dueDate,
    priorityRating,
    taskDeadline,
    estimatedCompletionTime,
    completionStatus
  };
  taskListArray.pusk(task);
  renderTask(task);
  
}


function renderTask(task){


//create html elements 
let item = document.createElement("li");
    item.innerHTML = "<p>" + task.taskDescription + "</p>";

    taskList.appendChild(item);

//extra task DOM elements
let delButton = document.createElement("button");
let delButtonText = document.createTextNode("Delete Task");
delButton.appendChild(delButtonText);
item.appendChild(delButton);

//event listeners for the DOM elements
delButton.addEventListener("click", function(event){
    event.preventDefault();
    item.remove();
});

// clear the input form
form.reset();
}

//TIMER
var TIME_LIMIT;
let timePast;
let timeLeft;
let timeInterval;